#!/usr/bin/env bash

shopt -s nullglob

BIN_NAME=$(basename "$0")

function usage {
    echo "Usage:"
    echo "$BIN_NAME [-c] target_dir source_dir"
    echo ""
    echo "This utility creates symlinks from the target directory to all the"
    echo "files in the source directory."
    echo ""
    echo "If the the -c option is specified, all the files from the source"
    echo "directory are copied to the target directory instead."
    echo ""
    echo "If the the -x option is specified, broken symlinks from the"
    echo "target directory are removed before proceeding."
    exit 1
}

if [[ $# -eq 0 ]] || [[ $1 = "help" ]] || [[ $1 = "-h" ]] || [[ $1 = "--help" ]]; then
	usage
fi

COPY="FALSE"
CLEAN="FALSE"

while getopts ':cx' flag; do
  case "${flag}" in
    c) COPY="TRUE";;
	x) CLEAN="TRUE";;
    *) usage
  esac
done

shift $((OPTIND -1))

SOURCE_DIR=$1
TARGET_DIR=$2

[[ -z "$SOURCE_DIR" ]] && usage
[[ -z "$TARGET_DIR" ]] && usage

mkdir -p "$TARGET_DIR"

if [[ $CLEAN == "TRUE" ]]; then
	cd "$TARGET_DIR"
	for FILE in * .[^.]*; do
		if [[ ! -e "$TARGET_DIR/$FILE" && -h "$TARGET_DIR/$FILE" ]]; then 	# check if file is a beoken link
			rm -rfv "$TARGET_DIR/$FILE"										# remove broken link if it exists 
		fi
	done
fi

cd "$SOURCE_DIR"
for FILE in * .[^.]*; do
	if [[ ! -e "$TARGET_DIR/$FILE" ]]; then
		if [[ $COPY == "FALSE" ]]; then
			ln -sv "$SOURCE_DIR/$FILE" "$TARGET_DIR/$FILE" 					# create symlink
		else
			cp -rfv "$SOURCE_DIR/$FILE" "$TARGET_DIR/$FILE" 				# create copy
		fi
	else
		if [[ "$TARGET_DIR/$FILE" -ef "$SOURCE_DIR/$FILE" ]]; then 
			cp -rfL "$TARGET_DIR/$FILE"{,.temp}
			rm -rf "$TARGET_DIR/$FILE"										# target file is the same as the source file
			if [[ $COPY == "FALSE" && ! -h "$TARGET_DIR/$FILE" ]]; then 	# target needs to be a symlink but it is not
				ln -sv "$SOURCE_DIR/$FILE" "$TARGET_DIR/$FILE"
			elif [[ $COPY == "TRUE" && -h "$TARGET_DIR/$FILE" ]]; then 		# target needs to be a copy but it is a symlink
				cp -rfv "$SOURCE_DIR/$FILE" "$TARGET_DIR/$FILE"
			fi
			rm -rf "$TARGET_DIR/$FILE.temp"
		else 																# target file and source file are different
			rm -rf "$TARGET_DIR/$FILE".bak 									# nuke current backup if it exists
			cp -rfL "$TARGET_DIR/$FILE"{,.bak} 								# back up current source file
			rm -rf "$TARGET_DIR/$FILE" 										# remove current source file
			if [[ $COPY == "FALSE" ]]; then
				ln -sv "$SOURCE_DIR/$FILE" "$TARGET_DIR/$FILE" 				# create symlink
			else
				cp -rfv "$SOURCE_DIR/$FILE" "$TARGET_DIR/$FILE" 			# create copy
			fi
		fi
	fi
done