#!/usr/bin/env bash

shopt -s nullglob

BIN_NAME=$(basename "$0")

function usage {
    echo "Usage:"
    echo "$BIN_NAME target_dir source_dir"
    echo ""
    echo "This utility removes any symlinks from the"
    echo "target directory to the source directory."
    echo ""
    echo "If the -d option is specified, the commands are printed out"
    echo "rather than being executed."
    exit 1
}

if [[ $1 = "help" ]] || [[ $1 = "-h" ]] || [[ $1 = "--help" ]]; then
	usage
fi

DEBUG="FALSE"

while getopts ':cxd' flag; do
  case "${flag}" in
	d) DEBUG="TRUE";;
    *) usage
  esac
done

shift $((OPTIND -1))

SOURCE_DIR=$1
TARGET_DIR=$2

[[ -z "$SOURCE_DIR" ]] && usage
[[ -z "$TARGET_DIR" ]] && usage

[[ ! -d "$SOURCE_DIR" ]] && echo "The source directory does not exist!" && usage

if [[ $DEBUG == "TRUE" ]]; then
	echo ""	
	echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
	echo "!!!!!!!!!!!!!!!! PERFORMING DRY RUN !!!!!!!!!!!!!!!!"
	echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
fi

if [[ -d "$TARGET_DIR" ]]; then

	echo ""
	echo "##############################"
	echo "########## CLEANING ##########"
	echo "##############################"

	cd "$TARGET_DIR" || ( echo "Could not cd into the target directory!" && usage )
	echo ""
	echo "TARGET DIRECTORY: $TARGET_DIR"
	echo ""
	for FILE in * .[^.]*; do
		if [[ ! -e "$TARGET_DIR/$FILE" && -h "$TARGET_DIR/$FILE" ]]; then
			echo "------------------------------"
			echo "File: $FILE"
			echo "------------------------------"
			echo "rm -rfv $TARGET_DIR/$FILE"
			[[ $DEBUG == "FALSE" ]] && rm -rfv "$TARGET_DIR/$FILE"
			echo ""
		fi
	done
	
	echo ""
	echo "##############################"
	echo "######### UNLINKING ##########"
	echo "##############################"

	cd "$SOURCE_DIR" || ( echo "Could not cd into the source directory!" && usage )
	echo ""
	echo "SOURCE DIRECTORY: $SOURCE_DIR"
	echo "TARGET DIRECTORY: $TARGET_DIR"
	echo ""
	for FILE in * .[^.]*; do
		echo "------------------------------"
		echo "File: $FILE"
		echo "------------------------------"
		if [[ -e "$TARGET_DIR/$FILE" && -h "$TARGET_DIR/$FILE" ]]; then
			if [[ "$TARGET_DIR/$FILE" -ef "$SOURCE_DIR/$FILE" ]]; then
				echo "~~~ COMMAND: cp -Lrv $TARGET_DIR/$FILE $TARGET_DIR/$FILE.temp"
				[[ $DEBUG == "FALSE" ]] && cp -Lrv "$TARGET_DIR/$FILE" "$TARGET_DIR/$FILE".temp
				echo ""
				
				echo "~~~ COMMAND: rm -rfv $TARGET_DIR/$FILE"
				[[ $DEBUG == "FALSE" ]] && rm -rfv "$TARGET_DIR/$FILE"
				echo ""
				
				echo "~~~ COMMAND: rm -rfv $TARGET_DIR/$FILE.bak"
				[[ $DEBUG == "FALSE" ]] && rm -rfv "$TARGET_DIR/$FILE".bak
				echo ""
				
				echo "~~~ COMMAND: mv -v $TARGET_DIR/$FILE.temp $TARGET_DIR/$FILE"
				[[ $DEBUG == "FALSE" ]] && mv -v "$TARGET_DIR/$FILE".temp "$TARGET_DIR/$FILE"
				echo ""
			fi
		fi
	done
fi